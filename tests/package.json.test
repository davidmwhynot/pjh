{
	"scripts": {
		"start": "concurrently -n \"server,client\" -c \"green,cyan\" \"npm run -s server\" \"npm run -s client\" #pjh runs client and server w/o tests",
		"dev": "concurrently -n \"server,client\" -c \"green,cyan\" \"nodemon\" \"cd client && npm start\" #pjh runs client, server, and tests",
		"prod": "#pjh not yet implemented",
		"setup": "rm -rf node_modules client/node_modules && npm i && cd client && npm i && cd .. #pjh todo: document script",
		"setup:dev": "#pjh not yet implemented",
		"setup:prod": "#pjh not yet implemented",
		"typescript": "cd src && node --inspect=5859 -r ts-node/register ./index.ts #pjh todo: document script",
		"typescript:dev": "cd src && node --inspect=5859 -r ts-node/register ./index.ts #pjh todo: document script",
		"typescript:prod": "cd src && node --inspect=5859 -r ts-node/register ./index.ts #pjh todo: document script",
		"client": "#pjh not yet implemented",
		"client:dev": "cd client && npm start #pjh todo: document script",
		"client:prod": "#pjh not yet implemented",
		"server": "npm start #pjh todo: document script",
		"server:dev": "nodemon #pjh runs nodemon",
		"server:prod": "node dist/index.js #pjh todo: document script",
		"build": "tsc && cd client && npm i && npm run -s build && mv build ../dist/public #pjh todo: document script",
		"build:dev": "npm run -s build:dev:typescript && npm run -s build:dev:client && npm run -s build:dev:server #pjh todo: document script",
		"build:dev:client": "cd client && npm run -s build && cd .. #pjh todo: document script",
		"build:dev:server": "mkdir -p dist && rm -rf dist/public && mv client/build dist/public #pjh todo: document script",
		"build:dev:typescript": "tsc #pjh todo: document script",
		"build:prod": "rm -rf node_modules client/node_modules && npm i && cd client && npm i && npm run -s build && rm -rf ../dist/public && mv build ../dist/public && cd .. && tsc #pjh todo: document script",
		"build:prod:client": "#pjh not yet implemented",
		"build:prod:server": "mkdir -p dist && rm -rf dist/public && mv client/build dist/public #pjh todo: document script",
		"build:prod:typescript": "tsc #pjh todo: document script",
		"test": "tsc --project tsconfig.test.json && node --max-old-space-size=32000 dist/tests/tests/test-products.js #pjh todo: document script",
		"test:dev": "#pjh not yet implemented",
		"test:dev:client": "#pjh not yet implemented",
		"test:dev:server": "#pjh not yet implemented",
		"test:prod": "rm -rf dist/public && mv client/build dist/public #pjh todo: document script",
		"test:prod:client": "#pjh not yet implemented",
		"test:prod:server": "#pjh not yet implemented",
		"prehelp": "npm config set loglevel silent #pjh-ignore",
		"help": "npm run pjh -s #pjh display this help text",
		"posthelp": "npm config set loglevel notice #pjh-ignore",
		"pjh": "echo 'process.stdout.cursorTo(-1);process.stdout.clearLine();process.stdout.cursorTo(-1);let output=``;var c=(a,b=[49])=>output+=[...b.map(a=>`\\x1b[`+a+`m`),a,`\\x1b[0m`].join(``);const tkColors=[32,33,34,35,36,37,93,94,95,96,97],tks=[],r=Object.entries(JSON.parse(process.argv[2]).scripts).map(([a,b])=>[a.split(`:`).map(a=>{const b=tks.find(b=>a===b.s);if(b)return{s:a,f:[b.f]};else{const b={s:a,f:[tkColors[tks.length%(tkColors.length-1)]]};return tks.push(b),b}}),0>b.lastIndexOf(`#`)?{f:[41,39],s:`No documentation available`}:{f:[49],s:b.slice(b.lastIndexOf(`#pjh`)+5)}]).sort(([a,b])=>1),L=[...r].sort((c,a)=>a[1].s.length-c[1].s.length)[0][1].s.length+2;c(`\\n\\n`+[...Array(L+3).keys()].map(()=>` `).join(``)),c(`Available Scripts\\n\\n`,[1,4,91]);for(let a=0;a<r.length;a++){const[b,d]=r[a];c([...Array(L-d.s.length).keys()].map(()=>` `).join(``)),c(d.s,d.f),c(`   npm `,[91]),c(`run `,[92]);for(let a=0;a<b.length;++a)c(b[a].s,b[a].f),a<b.length-1&&c(`:`);c(a<r.length-1?1===r[a+1][0].length?`\\n`:``:``),c(`\\n`)}c(`\\n`),console.log(`%s`,output);' | node - \"$(cat package.json)\" #pjh-ignore",
		"helpdev": "export FORCE_COLOR=true && node dist/help.js \"$(cat package.json)\" #pjh test this help script",
		"t": "",
		"lint": "self-documenting-command",
		"lint:fix": "command-that-is-way-too-long-too-be-self-documenting"
	}
}
